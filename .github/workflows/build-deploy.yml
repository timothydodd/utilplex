# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_NAME: utilplex

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node 18.x
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build:ci
      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_dist
          path: dist
  deploy:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: deploy_dist
      - name: "Say Hello"
        run: echo "Hello storage $STORAGE_ACCOUNT_NAME!"     
      - name: Delete blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob delete-batch --source '$web' --account-name $STORAGE_ACCOUNT_NAME
      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name $STORAGE_ACCOUNT_NAME --auth-mode key -d '$web' -s ./deploy_dist/$PROJECT_NAME --overwrite
      - name: Change index.html content-cache-control header
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob update --account-name $STORAGE_ACCOUNT_NAME --container-name '$web' --name 'index.html' --content-cache-control 'no-cache'
      - name: logout
        run: |
          az logout
        if: always()
